import pyowm
import math
import command_system
from settings import *
 
months = {"01": "–Ø–Ω–≤–∞—Ä—è",  "02" : "–§–µ–≤—Ä–∞–ª—è", "03" : "–ú–∞—Ä—Ç–∞", "04" : "–ê–ø—Ä–µ–ª—è",
               "05" : "–ú–∞—è", "06" : "–ò—é–Ω—è", "07" : "–ò—é–ª—è", "08" : "–ê–≤–≥—É—Å—Ç–∞",
               "09" : "–°–µ–Ω—Ç—è–±—Ä—è", "10" : "–û–∫—Ç—è–±—Ä—è", "11" : "–ù–æ—è–±—Ä—è", "12" : "–î–µ–∫–∞–±—Ä—è"}
winddirArray = ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW']
emojisDict = {'Clear':'‚òÄ','Clouds':'‚òÅ','Rain':'‚òÇ','Snow':'‚òÉ'}
 
def weather(arg):
    owm = pyowm.OWM(WeatherAPIKey)  # You MUST provide a valid API key
    fc = owm.three_hours_forecast('Nizhny Novgorod,ru')
    f = fc.get_forecast()
    get_weather_info = False
    day_counter = 0
    current_date = ""
    cleared = False
    temp_Log = ""
    Log = ""
    for weather in f:
        
        print(weather.get_reference_time('date'))
        if ( (arg == "–∑–∞–≤—Ç—Ä–∞") and (day_counter == 1) and (not cleared)):
            Log = ""
            cleared = True
           
        if(current_date != str(weather.get_reference_time('date').date()).split('-')[2]):
            temp_Log = temp_Log + (str(weather.get_reference_time('date').date()).split('-')[2] + " " + months[str(weather.get_reference_time('date').date()).split('-')[1]] + ":\n")
            current_date = str(weather.get_reference_time('date').date()).split('-')[2]
        
        if (str(weather.get_reference_time('date').time()).split(':')[0] == "09"):
            temp_Log = temp_Log + ("\tüåù –£—Ç—Ä–æ: ")
            get_weather_info = True
 
        if (str(weather.get_reference_time('date').time()).split(':')[0] == "15"):
            temp_Log = temp_Log + ("\tüåû –î–µ–Ω—å: ")
            get_weather_info = True
                
        if (str(weather.get_reference_time('date').time()).split(':')[0] == "21"):
            temp_Log = temp_Log + ("\tüåõ –í–µ—á–µ—Ä: ")
            get_weather_info = True
            day_counter = day_counter + 1
 
        if (str(weather.get_reference_time('date').time()).split(':')[0] == "03"):
            temp_Log = temp_Log + ("\tüåö –ù–æ—á—å: ")
            get_weather_info = True
 
        if (get_weather_info):   
            wind = "{0} {1}".format(weather.get_wind()['speed'], winddirArray[int(math.floor(weather.get_wind()['deg'] + 0.5) % 16)])
            humidity = weather.get_humidity()
            temp = weather.get_temperature('celsius')['temp']
            status = weather.get_status()
            try:
                weatherResult = "{0}¬∞C {1} {2}, wind {3} m/s, humidity {4}%".format(temp, status,emojisDict[status], wind, humidity)
                temp_Log = temp_Log + weatherResult + "\n"
            except TypeError:
                weatherResult = "{0}¬∞C {1}, wind {2} m/s, humidity {3}%".format(temp, status, wind,humidity)
                temp_Log = temp_Log + weatherResult + "\n"
           
            if (str(weather.get_reference_time('date').time()).split(':')[0] == "21"):
                Log = Log + temp_Log
                temp_Log = ""
           
            if ( (arg == "—Å–µ–≥–æ–¥–Ω—è" or arg == "") and day_counter == 1):
                return Log,""
 
            if (arg == "–∑–∞–≤—Ç—Ä–∞" and day_counter == 2):
                return Log,""
            get_weather_info = False
 

    if(arg == "–ø—Ä–æ–≥–Ω–æ–∑"):
        return Log,""
 
 
weather_command = command_system.Command()
 
weather_command.keys = ['–ø–æ–≥–æ–¥–∞', 'weather']
weather_command.description = '–í—ã–≤–µ–¥—É —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ –ù–∏–∂–Ω–µ–º –ù–æ–≤–≥–æ—Ä–æ–¥–µ'
weather_command.process = weather